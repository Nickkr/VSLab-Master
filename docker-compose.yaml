version: "3.2"
services:
  api-docs:
    image: gcr.io/api-console-a6952/app:0.1.0
    volumes:
      - "./API-Documentation:/app/api"
    ports:
      - "8082:8080"
    environment:
      API_PROJECT: api.raml
      API_TYPE: RAML 1.0
      API_MIME: application/raml
  product-service:
    build:
      context: ./CoreServices/Product
      dockerfile: ./BuildFrom${BUILD_FROM:-MavenSources}.dockerfile
      args:
        PORT: 18081
    networks:
      - local_dev_net
    ports:
      - "18081:18081"
    depends_on:
      - database
      - eureka-server
  category-service:
    build:
      context: ./CoreServices/Category
      dockerfile: ./BuildFrom${BUILD_FROM:-MavenSources}.dockerfile
      args:
        PORT: 18082
    ports:
      - "18082:18082"
    networks:
      - local_dev_net
    depends_on:
      - database
      - eureka-server
  user-service:
    build:
      context: ./CoreServices/User
      dockerfile: ./BuildFrom${BUILD_FROM:-MavenSources}.dockerfile
      args:
        PORT: 18083
    networks:
      - local_dev_net
    ports:
      - "18083:18083"
    depends_on:
      - database
      - eureka-server
  composite-service:
    build:
      context: ./CompositeService
      dockerfile: ./BuildFrom${BUILD_FROM:-MavenSources}.dockerfile
    networks:
      local_dev_net:
        aliases:
          - product-category-composite-service
    ports:
      - "18084:18084"
    depends_on:
      - product-service
      - category-service
  eureka-server:
    build:
      context: ./Eureka
      dockerfile: ./BuildFrom${BUILD_FROM:-MavenSources}.dockerfile
      args:
        PORT: 8761
    networks:
      local_dev_net:
        aliases:
          - eureka
    ports:
      - "8761:8761"
  zuul-server:
    build:
      context: ./Zuul
      dockerfile: ./BuildFrom${BUILD_FROM:-MavenSources}.dockerfile
      args:
        PORT: 8081
    networks:
      local_dev_net:
        aliases:
          - zuul
    ports:
      - "8081:8081"
    depends_on:
      - eureka-server
      - composite-service
      - user-service
  auth-server:
    build:
      context: ./AuthServer
      dockerfile: ./BuildFrom${BUILD_FROM:-MavenSources}.dockerfile
      args:
        PORT: 18085
    ports:
       - "18085:18085"
    networks:
       local_dev_net:
         aliases:
           - auth
  WebShop:
    build:
      context: ./WebShop
      dockerfile: ./BuildFrom${BUILD_FROM:-MavenSources}.dockerfile
      args:
        PORT: 8080
    image: webshop-frontend
    ports:
      - "8080:8080"
#    depends_on:
#      - zuul-server
#      - auth-server
  database:
    build:
      context: ./Database
      dockerfile: BuildDatabase.dockerfile
    volumes:
      - "database-storage:/var/lib/mysql"
    environment:
      LANG: C.UTF-8
      MYSQL_ROOT_PASSWORD: c8de110f37300a53a971749
    ports:
      - "3306:3306"
    networks:
      local_dev_net:
        aliases:
          - database
networks:
  local_dev_net:
    driver: bridge
volumes:
  database-storage:
