server:
  port: 18085
  servlet:
    context-path: "/auth"

spring:
  application:
    name: auth-server

security:
  oauth2:
    client:
      client-id: 1234
      client-secret: test
      auth-server-client-credentials:
        access-token-uri: http://localhost:18085/auth/oauth/token
        client-id: AuthServer
        client-secret: secret
        grant-type: client_credentials
        scope: read

eureka:
  client:
    fetch-registry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
  instance:
    preferIpAddress: true
    leaseRenewalIntervalInSeconds: 5
    metadataMap:
      instanceId: ${spring.application.name}:${random.value}

logging:
  level:
    com:
      netflix:
        loadbalancer:
          DynamicServerListLoadBalancer: INFO
    org: 
      springframework:
        security: DEBUG
        web:
          client:
            RestTemplate: DEBUG

management:
  endpoint:
    health:
      enabled: true
      show-details: always
  endpoints:
    enabled-by-default: true
    web:
      exposure:
        include: "*"
      base-path: /actuator
      cors:
        allowed-origins: true

---
spring:
  profiles: docker

eureka:
  client:
    serviceUrl:
      defaultZone: http://eureka:8761/eureka/
      
security:
  oauth2:
    client:
      messaging-client-client-creds:
        access-token-uri: http://auth:18085/auth/oauth/token
