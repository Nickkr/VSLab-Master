#%RAML 1.0
title: WebShop API
baseUri: http://localhost:8080/{version}
version: v1

types:
    Product:
        properties:
            id: number
            name: string
            details: string
            price: number
            categoryID: number
    NewProduct:
        properties:
            name: string
            details: string
            price: number
            categoryID: number
    Category:
        properties:
            id: number
            name: string
    User:
        properties:
            id: number
            username: string
            firstname: string
            lastname: string
            password: string
            role: ROLES
    Role:
        properties:
            id: number
            type: string
            level: number
    ROLES:
        enum:
            - USER
            - ADMIN
/products:
    description: Manage products.
    get:
        description: Get all products.
        queryParameters:
            searchText:
                type: string
                description: The text to search for.
                required: false
            minPrice:
                type: number
                description: The minimum price.
                required: false
            maxPrice:
                type: number
                description: The maximum price.
                required: false
            category:
                type: number
                description: The id of a specific category.
                required: false
        responses:
            200:
                description: The list of all products.
                body:
                    application/json:
                        type: Product[]
                        example: |
                            [
                                {
                                    "id": 1,
                                    "name": "Apfel",
                                    "details": "Ein Apfel",
                                    "price": 5,
                                    "categoryID": 1
                                }
                            ]
    post:
        description: Add a new product.
        body:
            application/json:
                type: NewProduct
        responses:
            201:
                description: The creaded Product.
                body:
                    application/json:
                        type: Product
                        example: |
                            {
                                "id": 1,
                                "name": "Apfel",
                                "details": "Ein Apfel",
                                "price": 5,
                                "categoryID": 1
                            }
            401:
                description: Unauthorized access. Only admin users can mangage products.
    /{productId}:
        description: Product entity.
        get:
            description: Get a product.
            responses:
                200:
                    description: The requested product.
                    body:
                        application/json:
                            type: Product
                            example: |
                                {
                                    "id": 1,
                                    "name": "Apfel",
                                    "details": "Ein Apfel",
                                    "price": 5,
                                    "categoryID": 1
                                }
                404:
                    description: Product not found.
        put:
            description: Edit a product.
            body:
                application/json:
                    type: Product
            responses: 
                200:
                    description: The edited product
                    body:
                        application/json:
                            type: Product
        delete:
            description: Delete a product.
            responses:
                204:
                    description: Product deleted.
                401:
                    description: Unauthorized access. Only admin users can mangage products.
                404:
                    description: Product not found.
/categories:
    description: Manage categories.
    get:
        description: Get all categories. Optionally filtered by a name.
        queryParameters:
            searchName:
                type: string
                description: The name to search for.
                required: false
        responses:
            200:
                description: The list of all categories.
                body:
                    application/json:
                        type: Category[]
                        example: |
                            [
                                {
                                    "id": 1,
                                    "name": "Obst"
                                },
                                {
                                    "id": 2,
                                    "name": "Gem√ºse"
                                }
                            ]
    post:
        description: Add a new category.
        body:
            application/json:
                properties:
                    name:
                        description: The name for the new category.
                        required: true
                        type: string
                example: |
                    {
                        "name": "Saft"
                    }
        responses:
            201:
                description: The created category.
                body:
                    application/json:
                        type: Category
                        example: |
                            {
                                "id": 3,
                                "name": "Saft"
                            }
            401:
                description: Unauthorized access. Only admin users can mangage categories.
    /{categoryID}:
        description: Access a category by its ID.
        get:
            description: Get a category entity.
            responses:
                200:
                    description: The requested category.
                    body:
                        application/json:
                            type: Category
                            example: |
                                {
                                    "id": 1,
                                    "name": "Obst"
                                }
                404:
                    description: Category not found.
        put:
            description: Change a category name.
            body:
                application/json:
                    properties:
                        name:
                            description: The new name for the category.
                            required: true
                            type: string
                    example: |
                        {
                            "name": "Wein"
                        }
            responses:
                201:
                    description: The changed category.
                    body:
                        application/json:
                            type: Category
                            example: |
                                {
                                    "id": 3,
                                    "name": "Wein"
                                }
                401:
                    description: Unauthorized access. Only admin users can mangage categories.
        delete:
            description: Deletes a category and its accociated products.
            responses:
                204:
                    description: Success.
                401:
                    description: Unauthorized access. Only admin users can mangage categories.
/users:
    description: Manage users.
    post:
        description: Add a new user.
        body:
            application/json:
                type: User
                example: |
                    {
                        "id": 1234,
                        "username": "Camembert77",
                        "firstname": "Alex",
                        "lastname": "Tester",
                        "password": "rt5j8if",
                        "role" : "USER"
                    }
        responses:
            201:
                body:
                    application/json:
                        type: User
    get:
        description: Query all user.
        queryParameters:
            (none):
        responses:
            200:
                description: The requested users.
                body:
                    application/json:
                        type: User
                        example: |
                              {
                                "id": 1234,
                                "username": "Camembert77",
                                "firstname": "Alex",
                                "lastname": "Tester",
                                "password": "rt5j8if",
                                " role" : "USER"
                            }
            404:
                description: Users not found.
    put:
        description: Change user's properties.
        body:
            application/json:
                example: |
                    {
                        "lastname": "NeuerNachname",
                        "password": "3jfjfe4_"
                    }
        responses:
            200:
                body:
                    application/json:
                        type: User
    delete:
        description: Delete all users.
        responses:
            204:
                description: Users deleted.
            404:
                description: Users not found.
    /{username}:
        get:
            description: Query user.
            responses:
                200:
                    description: The requested user.
                    body:
                        application/json:
                            type: User
                            example: |
                                {
                                    "id": 1234,
                                    "username": "Camembert77",
                                    "firstname": "Alex",
                                    "lastname": "Tester",
                                    "password": "rt5j8if",
                                    "role" : "USER"
                                }
                404:
                    description: User not found.
        put:
            description: Change user's properties.
            body:
                application/json:
                    example: |
                        {
                            "lastname": "NeuerNachname",
                            "password": "3jfjfe4_"
                        }
            responses:
                200:
                    body:
                        application/json:
                            type: User
        delete:
            description: Delete a user.
            responses:
                204:
                    description: User deleted.
                404:
                    description: User not found.
